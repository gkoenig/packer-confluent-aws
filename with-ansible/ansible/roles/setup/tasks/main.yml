---  
- name: ensure a list of packages is installed
  yum:
    name: "{{ packages }}"
  vars:
    packages:
    - java-1.8.0-openjdk 
    - policycoreutils-python 
    - net-tools 
    - ca-certificates 
    - nmap-ncat 
    - telnet 
    - lsof
    - python
    - ec2-net-utils
    - iproute
    - python2-boto3
    - awslogs
    - jq

- name: copy Jolokia JVM agent
  copy:
    src: jolokia-jvm-{{ JOLOKIA_VERSION }}-agent.jar
    dest: "/opt/jolokia-jvm-{{ JOLOKIA_VERSION }}-agent.jar"
    mode: 0644
- name: set awscli conf
  template:
    src: "awscli.conf.j2"
    dest: /etc/awslogs/awscli.conf
    mode: '0644'

- name: Create groups
  group:
    name: "{{ item.name }}"
    state: present
  with_items:
    - { name: 'confluent' }
    - { name: 'kafka'}
- name: Create users
  user:
    name: "{{ item.name }}"
    state: present
    shell: /bin/bash
    groups: "{{ item.groups }}"
  with_items:
    - { name: 'confluent', groups: 'confluent'}
    - { name: 'kafka', groups: 'kafka,confluent'}
- name: Download Apache Kafka
  get_url:
    url: http://packages.confluent.io/archive/{{ CONFLUENT_MAIN_VERSION }}/confluent-community-{{ CONFLUENT_VERSION }}-{{ CONFLUENT_SCALA_VERSION }}.tar.gz
    dest: /tmp  
- name: Unpack Apache Kafka
  unarchive:
    src: /tmp/confluent-community-{{ CONFLUENT_VERSION }}-{{ CONFLUENT_SCALA_VERSION }}.tar.gz
    dest: /opt
    mode: '755'
    group: 'confluent'
    owner: 'confluent'
    remote_src: yes
- name: create link to confluent within opt
  file:
    src: /opt/confluent-{{ CONFLUENT_VERSION }}
    dest: /opt/confluent
    owner: kafka
    group: confluent
    state: link     
- name: create link from etc to confluent
  file:
    src: /opt/confluent/etc/kafka
    dest: /etc/kafka
    owner: kafka
    group: confluent
    state: link 


- name: create logs dir 
  file:
    path: /opt/confluent/logs
    state: directory
    mode: 0777
    owner: kafka
    group: confluent

- name: create kafka data dir 
  file:
    path: "{{ KAFKA_DATA_DIR }}"
    state: directory
    mode: 0755
    owner: kafka
    group: confluent


- name: create archive of local ansible dir 
  archive:
      path: ../
      dest: ../../cloudinit-ansible.tgz
      format: gz
  become: false
  delegate_to: 127.0.0.1

- name: copy and unpack ansible archive on remote
  unarchive:
    src: ../../cloudinit-ansible.tgz
    dest: /opt/

- name: enable service awslogsd
  systemd:
      enabled: yes
      name: "{{ item.name }}"
  with_items:
    - { name: 'awslogsd' }
    
    